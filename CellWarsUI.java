import java.awt.Color;
import java.awt.event.MouseEvent;
import java.util.Iterator;

/**
 *
 * @author Abrie van Aardt 13178840
 * @author Michelle Swanepoel 13066294
 */
public class CellWarsUI extends javax.swing.JFrame {

    /**
     * Creates new form CellWarsUI
     */    
    public CellWarsUI(int _dimensions, int _totCellCount, int _gameMode) {
        initComponents();
        GAME_MODE = _gameMode;
        DIMENSIONS = _dimensions;
        TOT_CELL_COUNT = _totCellCount;
        cells = new CellComponent[DIMENSIONS][DIMENSIONS];
        this.setSize(800,600);
        setLocationRelativeTo(null);               
    }
    
    public void initiliaseUI(Board board){
        cellHeight = (this.getHeight() - this.getInsets().top - this.getInsets().bottom)/DIMENSIONS;
        cellWidth = (this.getWidth() - this.getInsets().right - this.getInsets().left)/DIMENSIONS;
        for (int i=0; i < DIMENSIONS; ++i){
            for (int j=0; j < DIMENSIONS; ++j){
                cells[i][j] = new CellComponent();
                cells[i][j].setBackground(Color.WHITE);
                cells[i][j].setLocation(i*cellWidth, j*cellHeight);
                cells[i][j].setSize(cellWidth, cellHeight);
                cells[i][j].setVisible(true);                
                this.getContentPane().add(cells[i][j]);
            }
        }
        
        this.addMouseListener(new CellWarsMouseAdapter(board){
                    @Override
                    public void mouseClicked(MouseEvent e) {
                        int xIndex = (e.getX()- getInsets().left)/cellWidth;
                        int yIndex = (e.getY()- getInsets().top)/cellHeight;  
                        b.acceptCoordinate(new Coordinate(xIndex, yIndex));                        
                    }                    
                });
        this.updateUI(board);
    }
    
    public void updateUI(Board board){
        Iterator blanketIterator = board.getBlankets().iterator();
        Blanket currentBlanket;
        
        for (int i = 0; i < DIMENSIONS; ++i){
               for (int j = 0; j < DIMENSIONS; ++j){ 
                    cells[i][j].setBackground(Color.WHITE);
               }
           }
        
        while (blanketIterator.hasNext()){
           currentBlanket =  (Blanket) blanketIterator.next();
           for (int i = currentBlanket.getTopLeft().getX(); i <= currentBlanket.getBottomRight().getX(); ++i){
               for (int j = currentBlanket.getTopLeft().getY(); j <= currentBlanket.getBottomRight().getY(); ++j){ 
                    if (currentBlanket.getOwner().equals("p1"))
                        cells[i][j].setBackground(PLAYER1_BLANKET_COLOUR);
                    else
                        cells[i][j].setBackground(PLAYER2_BLANKET_COLOUR);
               }
           }
        }
        
        for (Cell cell: board.getCells()){
            Coordinate cellCoordinate = cell.getCoordinate();
            int xIndex = cellCoordinate.getX();
            int yIndex = cellCoordinate.getY();
            
            if (cell.getOwner().equals("p1"))
                cells[xIndex][yIndex].setBackground(PLAYER1_CELL_COLOUR);
            else
                cells[xIndex][yIndex].setBackground(PLAYER2_CELL_COLOUR);
        }
        
    }   
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 999, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 804, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentResized

    private final int GAME_MODE;
    private final int DIMENSIONS;
    private final int TOT_CELL_COUNT;
    private int cellHeight;
    private int cellWidth;
    private final Color PLAYER1_CELL_COLOUR = Color.MAGENTA;
    private final Color PLAYER1_BLANKET_COLOUR = Color.PINK;
    private final Color PLAYER2_CELL_COLOUR = Color.BLUE;
    private final Color PLAYER2_BLANKET_COLOUR = Color.LIGHT_GRAY;
    private final Color BLEND_COLOUR = Color.YELLOW;
    
    private CellComponent[][] cells;
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
